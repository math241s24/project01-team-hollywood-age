---
title: "Project Presentation"
subtitle: "The data we have chosen"
format: 
  revealjs
highlight-style: a11y
execute:
  code-link: true
  echo: true
editor_options: 
  chunk_output_type: console
---
```{r}
library(quarto)
library(readr)
library(tidytuesdayR)
library(dplyr)
library(ggplot2)
library(mdsr)
age_gaps <- read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-02-14/age_gaps.csv", show_col_types = FALSE)
View(age_gaps)
```

## Outline

* Your presentation should generally follow the same structure as your write-up. 

* Each team will have 5 minutes for their presentation, and each team member must speak (roughly equally) during this time. 

* Your presentation will be created using `Quarto`, which allows you to write slides using the same coding structure you’re used to with `Rmarkdown`. 

* This is a sample Quarto slide template you can edit to your desire to create your presentation. 

## Rubric

* Roughly I recommend 1 slide for introduction, 2 slides for Question 1, ans 2 slides for Question 2. 
  + You can imagine spending roughly one minute on each slide.
  + You should feel free to have more (or fewer) slides. 
  
* Your evaluation will be based on your content, professionalism (including sticking to time), and your performance during the Q&A (question and answer). We don’t care how many slides you use to do this.

<<<<<<< HEAD
Are men typically the older person in the age gap, and has this changed over time?
```{r}
custom_colors <- c("man" = "cyan3", "woman" = "deeppink3", "Other" = "gray")

age_diff_plot <- ggplot(age_gaps, aes(release_year)) +
  geom_smooth(aes(y = actor_1_age, color = character_1_gender, linetype = "Actor 1")) +
  geom_smooth(aes(y = actor_2_age, color = character_2_gender, linetype = "Actor 2")) +
   scale_color_manual(values = custom_colors) +
  scale_linetype_manual(values = c("solid", "dashed")) +
  labs( title = "Actor age gaps over time" ,
        x = "movie release year",
        y = "actor age")
age_diff_plot
```

```{r}
custom_colors <- c("man" = "cyan3", "woman" = "deeppink3", "Other" = "gray")

older_actors <- ggplot(age_gaps, aes(release_year, color = character_1_gender))+
  geom_freqpoly() +
  scale_color_manual(values = custom_colors)
older_actors
```

=======
Directors and Age Gaps:
```{r}
movies_1 <- read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-02-14/age_gaps.csv", show_col_types = FALSE)
movies_2 <- movies_1 %>% count(director)%>%
  arrange(desc(n))
```

```{r}
movies_1 <- movies_1 %>%
  group_by(director) %>%
  mutate(average_age_gap = mean(`age_difference`)) 

```

```{r}
movies_usable <- subset(movies_1, director %in% c("Woody Allen", "John Glen", "Martin Scorsese", "Mike Newell", "Steven Spielberg", "Christopher Nolan", "David Fincher", "Dennis Dugan", "Guy Hamilton", "Mike Nichols"))

```


```{r}
ggplot(movies_usable, aes(x = director, y = age_difference, fill= director)) +
  geom_boxplot() +
  labs(title = "Typical Age Gaps in Hollywood Movies by Common Directors",
       x = "Director",
       y = "Age Difference")+ theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
  theme(legend.position = "none")
```

```{r}
movie_stats <- summary(movies_usable$age_difference)
print(movie_stats)

```

```{r}
movies_usable_mean <- movies_usable %>%
  group_by(director) %>%
  summarize(average_age_gap = mean(`age_difference`), n = n()) %>%
  arrange(desc(n))

print(movies_usable_mean)

```
>>>>>>> e3f1cf94cb75995b5d2092fc83f8614fe155ef0f
